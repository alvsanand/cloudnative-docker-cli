name: Release

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  create-release:
    needs: build-and-push-image

    runs-on: ubuntu-latest

    steps:
      - name: Get version of software
        id: get_versions
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:latest

          CHANGELOG=$(docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:latest cloudnative-docker-cli-changelog.sh)

          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "VERSION=$(echo ${{ github.ref }} | sed -rn 's|^refs/tags/(.+)|\1|p' 2> /dev/null)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.VERSION }}
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
